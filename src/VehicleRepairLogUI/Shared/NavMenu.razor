@inject NavigationManager navigationManager
@inject IUserService userService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Vehicle Repair Log</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/vehicles">
                        <span class="oi active" aria-hidden="true"></span> Vehicles
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="@(() => UserProfileAsync())">
                        <span class="oi oi-person active" aria-hidden="true"></span> Profile
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    public int UserId { get; set; }

    // Stores the User Authentication State data.
    [CascadingParameter] private Task<AuthenticationState> AuthState { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async Task UserProfileAsync()
    {
        // Get the current user State.
        AuthenticationState authState = await AuthState;

        // If the current user state is not authenticated...
        if (authState.User.Identity.IsAuthenticated == false)
        {
            // Takes to homepage.
            navigationManager.NavigateTo("/", true);
        }
        else
        {
            string userId = authState.User.FindFirst(ClaimTypes.NameIdentifier).Value;
            UserId = Convert.ToInt32(userId);

            // Takes to user profile page with given ID.
            navigationManager.NavigateTo($"/userProfile/{UserId}", true);
        }  
    }
}
