@page "/addVehicle"

@inject IVehicleService vehicleService
@inject NavigationManager navigationManager

<h3>Add Vehicle</h3>

<div class="card col-2">
    <div class="card-body">
        <EditForm Model="vehicle" OnValidSubmit="CreateVehicleAsync">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="BrandName" class="control-label">Brand Name</label>
                <InputText id="BrandName" class="form-control" @bind-Value="vehicle.BrandName"/>
                <ValidationMessage For="@(() => vehicle.BrandName)"/>
            </div>
            <div class="form-group">
                <label for="VinNumber" class="control-label">Vin Number</label>
                <InputText id="VinNumber" class="form-control" @bind-Value="vehicle.VinNumber"/>
                <ValidationMessage For="@(() => vehicle.VinNumber)"/>
            </div>
            <div class="form-group">
                <label for="PaintColor" class="control-label">Paint Color</label>
                <InputText id="PaintColor" class="form-control" @bind-Value="vehicle.PaintColor"/>
                <ValidationMessage For="@(() => vehicle.PaintColor)"/>
            </div>
            <div class="form-group">
                <label for="FuelType" class="control-label">Fuel Type</label>
                <InputText id="FuelType" class="form-control" @bind-Value="vehicle.FuelType"/>
                <ValidationMessage For="@(() => vehicle.FuelType)"/>
            </div>
            <div class="form-group">
                <label for="Mileage" class="control-label">Mileage</label>
                <input id="Mileage" class="form-control" @bind-value="@vehicle.Mileage"/>
                <ValidationMessage For="@(() => vehicle.Mileage)"/>
            </div>

            <button type="submit" class="btn btn-primary mt-2">Save</button>
        </EditForm>
    </div>
</div>

@code {
    protected Vehicle vehicle = new();

    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    protected async Task CreateVehicleAsync()
    {
        AuthenticationState authState = await AuthState;

        if (authState.User.Identity.IsAuthenticated == false)
        {
            navigationManager.NavigateTo("/");
        }

        // Find better way of adding user ID to request???
        vehicle.UserId = Convert.ToInt32(authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value);

        await vehicleService.AddVehicleAsync(vehicle);

        navigationManager.NavigateTo("/vehicles");
    }

    void cancel()
    {
        navigationManager.NavigateTo("/vehicles");
    }
}
