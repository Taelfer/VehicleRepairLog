@page "/userProfile/{UserId}"

@attribute [Authorize]

@inject IUserService userService
@inject NavigationManager navigationManager

@if (User is null)
{
    <p>Loading...</p>
}
else
{
    <UserProfile 
        User="User"
        UserDetailsUpdate="ShowUpdateUserDetailsForm"
        UserPasswordChange="ShowUserPasswordChangeForm" />

    <UpdateUserDetails 
        Show="ShowEditDetailsForm"
        User="User"
        OnConfirm="@(async () => await ConfirmUserDetailsUpdate())"
        OnCancel="@(async () => await CancelDetailsUpdate())" />

    <ChangeUserPassword
        Show="ShowPasswordChangeForm"
        PasswordChangeRequest="PasswordChangeRequest"
        OnConfirm="@(async () => await ConfirmPasswordChange())"
        OnCancel="@(async () => await CancelDetailsUpdate())" />
}

@code {
    // Stores current User data.
    [Parameter] public UserDto User { get; set; }
    [Parameter] public PasswordChangeRequestDto PasswordChangeRequest { get; set; } = new PasswordChangeRequestDto();
    [Parameter] public bool ShowEditDetailsForm { get; set; }
    [Parameter] public bool ShowPasswordChangeForm { get; set; }

    // Stores User ID taken from URI.
    [Parameter] public string UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Gets User data asynchronously with ID from URI.
        User = await userService.GetUserByIdAsync(Convert.ToInt32(UserId));
    }

    protected async Task ConfirmUserDetailsUpdate()
    {
        await userService.UpdateUserDetailsAsync(User);

        ShowEditDetailsForm = false;
    }

    protected async Task ConfirmPasswordChange()
    {
        await userService.ChangePasswordAsync(PasswordChangeRequest, User.Id);

        ShowPasswordChangeForm = false;
    }

    protected void ShowUpdateUserDetailsForm()
    {
        ShowEditDetailsForm = true;
    }

    protected void ShowUserPasswordChangeForm()
    {
        ShowPasswordChangeForm = true;
    }

    protected async Task CancelDetailsUpdate()
    {
        await OnInitializedAsync();

        ShowEditDetailsForm = false;
        ShowPasswordChangeForm = false;
    }
}