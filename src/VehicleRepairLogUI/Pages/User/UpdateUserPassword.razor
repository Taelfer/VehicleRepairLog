@page "/updateUserPassword/{id}"

@inject IUserService userService
@inject NavigationManager navigationManager

<h1>Change Password</h1>
<hr />

<div class="card col-2">
    <div class="card-body">
        <EditForm Model="user" OnValidSubmit="(() => UpdateUserAsync(user))">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="newPassword">New Password</label>
                <InputText id="newPassword" type="password" class="form-control" @bind-Value="user.Password" />
                <ValidationMessage For="@(() => user.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="user.ConfirmPassword" />
                <ValidationMessage For="@(() => user.ConfirmPassword)" />
            </div>

            <button type="submit" class="btn btn-success">Save changes</button>
        </EditForm>
    </div>
</div>

@code {
    // Stores User ID taken from URI.
    [Parameter]
    public string Id { get; set; }

    protected User user = new();

    // Stores the User Authentication State data.
    [CascadingParameter]
    protected Task<AuthenticationState> AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Gets User details asynchronously with ID from URI.
        user = await userService.GetUserByIdAsync(Convert.ToInt32(Id));
    }

    protected async Task UpdateUserAsync(User user)
    {
        // Gets the current user State.
        AuthenticationState authState = await AuthState;

        // If the current user state is not authenticated...
        if (authState.User.Identity.IsAuthenticated == false)
        {
            // Takes to homepage.
            navigationManager.NavigateTo("/", true);
        }

        // Otherwise...
        // Updates user password.
        await userService.UpdateUserAsync(user);

        // Takes to User profile page.
        navigationManager.NavigateTo($"/userProfile/{Convert.ToInt32(Id)}", true);
    }
}
